# apps/web/Dockerfile
# Build Next.js (App Router) with npm and ship the standalone output.

# ---------- 1) BUILD ----------
FROM node:20-bookworm-slim AS builder
WORKDIR /app

# Only copy the web app's manifests first for better caching
# (package*.json pattern copies package.json and package-lock.json if present)
COPY apps/web/package*.json apps/web/

# Install dependencies for the web app
# Use npm ci when a lockfile exists; otherwise fall back to npm install
RUN bash -lc 'cd apps/web && if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ]; then npm ci; else npm install; fi'

# Copy the rest of the repository (the source code)
COPY . .

# Build the Next app (requires next.config.mjs -> output: "standalone")
ENV NODE_ENV=production
RUN bash -lc 'cd apps/web && npm run build'

# ---------- 2) RUNTIME ----------
# Use a small, secure runtime
FROM gcr.io/distroless/nodejs20-debian12 AS runner
WORKDIR /app
ENV NODE_ENV=production
ENV PORT=8080
EXPOSE 8080

# Copy the Next standalone server, static assets, and public files
COPY --from=builder /app/apps/web/.next/standalone ./
COPY --from=builder /app/apps/web/.next/static ./apps/web/.next/static
COPY --from=builder /app/apps/web/public ./apps/web/public

# Start Next's standalone server (entry is generated by Next)
CMD ["apps/web/server.js"]

