steps:
  - name: gcr.io/cloud-builders/docker
    args: [
      "build",
      "-t","${_REGION}-docker.pkg.dev/${_PROJECT}/${_REPO}/${_SERVICE}:${COMMIT_SHA}",
      "-f","Dockerfile.frontend","."
    ]
  - name: gcr.io/cloud-builders/docker
    args: ["push","${_REGION}-docker.pkg.dev/${_PROJECT}/${_REPO}/${_SERVICE}:${COMMIT_SHA}"]
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: gcloud
    args: [
      "run","deploy","${_SERVICE}",
      "--image","${_REGION}-docker.pkg.dev/${_PROJECT}/${_REPO}/${_SERVICE}:${COMMIT_SHA}",
      "--region","${_REGION}",
      "--platform","managed",
      "--allow-unauthenticated",
      "--set-env-vars",
      "BACKEND_BASE_URL=${_BACKEND_BASE_URL},FIREBASE_API_KEY=${_FIREBASE_API_KEY},FIREBASE_AUTH_DOMAIN=${_FIREBASE_AUTH_DOMAIN},FIREBASE_PROJECT_ID=${_FIREBASE_PROJECT_ID},FIREBASE_APP_ID=${_FIREBASE_APP_ID},FIREBASE_STORAGE_BUCKET=${_FIREBASE_STORAGE_BUCKET},FIREBASE_MESSAGING_SENDER_ID=${_FIREBASE_MESSAGING_SENDER_ID},POSTHOG_KEY=${_POSTHOG_KEY}"
    ]
images:
  - ${_REGION}-docker.pkg.dev/${_PROJECT}/${_REPO}/${_SERVICE}:${COMMIT_SHA}
options:
  logging: CLOUD_LOGGING_ONLY
